input {
    # file {
    #     path => "/var/logs/mount/test.log"
    #     tags => ["app_log", "comiru_original_app_log", "env:${ENV}"]
    # }

    # file {
    #     "path" => "/var/logs/mount/test.log"
    #     "tags" => ["from_papertrail", "env:${ENV}"]
    #     "start_position" => "beginning"
    #     "sincedb_path" => "/data/logstash/sincedb"
    # }

    # redis {
    #     data_type => "list"
    #     key => "${APP_LOG_QUEUE}"
    #     host => "${ROUTER_LOG_REDIS_SERVER}"
    #     port => "${ROUTER_LOG_REDIS_PORT}"
    #     password => "${ROUTER_LOG_REDIS_PASSWORD}"
    #     threads => 5
    #     tags => ["comiru_original_app_log","env:${ENV}"]
    # }

    redis {
        data_type => "list"
        key => "${APP_LOG_QUEUE}"
        host => "${LOG_REDIS_SERVER}"
        port => "${LOG_REDIS_PORT}"
        password => "${LOG_REDIS_PASSWORD}"
        threads => 5
        tags => ["comiru_original_app_log","env:${ENV}"]
    }
}

filter {
  if "from_papertrail" in [tags] {
    grok{
      match => {
        "message" => '%{NUMBER:no01}\t%{TIMESTAMP_ISO8601:timestamp}\t%{TIMESTAMP_ISO8601:logtime_1}\t%{NUMBER:no02}\t%{GREEDYDATA:project}\t%{IP:ip}\t%{GREEDYDATA:localn}%{LOGLEVEL:heroku_log_level}\t%{GREEDYDATA:platform}/%{GREEDYDATA:component}\t%{GREEDYDATA:real_log}'
      }
    }
    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
      target => "@timestamp"
    }

    mutate {
      replace => {
        "message" => "%{real_log}"
      }
      remove_field => [
          "timestamp", 'logtime_1', 'logtime','ip','localn','heroku_log_level', "host", "real_log"
      ]
    }
  }
  if "comiru_original_app_log" in [tags] {
    if [log_source] != "beats"{
      grok{
        match => {
          "message" => '%{NUMBER:no01} <%{NUMBER:no02}>%{NUMBER:no03} %{DATA:timestamp} %{DATA:drains_token} %{DATA:platform} %{DATA:component} - - %{GREEDYDATA:real_log}'
        }
      }
      date {
        match => ["timestamp", "ISO8601"]
        target => "@timestamp"
      }
      mutate {
        replace => { "message" => "%{real_log}" }
        remove_field => [
            "timestamp", "host", "real_log"
        ]
      }
    }
  }
}

output {
    if "comiru_original_app_log" in [tags] {
        elasticsearch {
            hosts => "${ELASTIC_ADDR}"
            user => "elastic"
            password => "${ELASTIC_PASSWORD}"
            index => "comiru-%{+YYYY.MM.dd}"
            ecs_compatibility => disabled
        }

        if "env:staging" in [tags] {
            file {
                path => "/nfs/log_backup/%{+YYYY-MM-dd}.log"
                codec => line { format => "%{no01} <%{no02}>%{no03} %{@timestamp} %{drains_token} %{platform} %{component} - - %{message}"}
            }
        }

        # file {
        #     path => "/var/logs/mount/%{+YYYY-MM-dd}.log"
        #     codec => line { format => "%{no01} <%{no02}>%{no03} %{@timestamp} %{drains_token} %{platform} %{component} - - %{message}"}
        # }

        # stdout {}

        redis {
            data_type => "list"
            host => "${REDIS_INTERNAL_HOST}"
            port => "${REDIS_INTERNAL_PORT}"
            # password => "${REDIS_INTERNAL_PASSWORD}"
            key => "clickhouse"
        }
    }

    if "from_papertrail" in [tags] {
        # elasticsearch {
        #     hosts => "${ELASTIC_ADDR}"
        #     user => "elastic"
        #     password => "${ELASTIC_PASSWORD}"
        # #     index => "comiru-%{+YYYY.MM.dd}"
        #     index => "dev-%{+YYYY.MM.dd}"
        #     ecs_compatibility => disabled
        # }

        # stdout{}

        redis {
            data_type => "list"
            host => "${REDIS_INTERNAL_HOST}"
            port => "${REDIS_INTERNAL_PORT}"
            # password => "${REDIS_INTERNAL_PASSWORD}"
            key => "clickhouse"
        }
    }
}
