# 补日志专用
input {
    redis {
        data_type => "list"
        key => "elk"
        host => "${REDIS_INTERNAL_HOST}"
        port => "${REDIS_INTERNAL_PORT}"
        # password => "${REDIS_INTERNAL_PASSWORD}"
        threads => 5
        tags => ["comiru_app_log_es"]
    }
}

filter {
  if "comiru_app_log_es" in [tags] {
    if [log_source] != "beats"{
      grok{
          match => {
              # for papertrail
              "message" => '%{NUMBER:no01}\t%{TIMESTAMP_ISO8601:logtime}\t%{TIMESTAMP_ISO8601:logtime_1}\t%{NUMBER:no02}\t%{GREEDYDATA:project}\t%{IP:ip}\t%{GREEDYDATA:localn}%{LOGLEVEL:heroku_log_level}\t%{GREEDYDATA:heroku_log_type}\t%{GREEDYDATA:real_log}'

              # for heroku log drain
              #"message" => '%{NUMBER:no01} <%{NUMBER:no02}>%{NUMBER:no03} %{NOTSPACE:logtime} %{NOTSPACE:str01} %{NOTSPACE:str01} %{NOTSPACE:str01} %{NOTSPACE:str01} %{NOTSPACE:str01} %{GREEDYDATA:real_log}'
          }
          add_tag => [ "splited"]
      }

      mutate {
          remove_field => [ "no01", "no02", "logtime_1", "localn" ]
      }

      ruby {
          code => "
              event.set('timestamp', Time.at(Time.parse(event.get('logtime')).to_i).strftime('%Y-%m-%d %H:%M:%S'))
              event.set('log_date', Time.at(Time.parse(event.get('logtime')).to_i+32400).strftime('%Y.%m.%d'))
          "
      }

      if "<158>" in [message] and "at=info" in [message]  {
        grok{
          match => {
            "message" => '%{NUMBER:no01} <%{NUMBER:no02}>%{NUMBER:no03} %{DATA:timestamp} %{GREEDYDATA:str01} heroku router - - at=%{WORD:at} method=%{WORD:method} path="%{URIPATH:uri_path}%{URIPARAM:uri_param}?" host=%{URIHOST:request_host} request_id=%{UUID:request_id} fwd="%{GREEDYDATA:fwd}" dyno=%{NOTSPACE:dyno} connect=%{NUMBER:connect}ms service=%{NUMBER:service}ms status=%{NUMBER:status} bytes=%{NUMBER:bytes} protocol=%{WORD:protocal}'
          }
        }

        mutate {
          add_field => {
            "log_type" => "access-heroku"
          }
        }
      }elseif "<190>" in [message] {
        if "Operation Log" in [message] {
          grok{
            match => {
              "message" => '%{NUMBER:no01} <%{NUMBER:no02}>%{NUMBER:no03} %{DATA:timestamp} %{GREEDYDATA:str01} app %{GREEDYDATA:dyno} - - \[%{GREEDYDATA:request_time}\] %{GREEDYDATA:log}   \[\]'
            }
          }

          mutate {
            add_field => {
              "log_type" => "operation-heroku"
            }
          }
        }else{
          grok{
            match => {
              "message" => '%{NUMBER:no01} <%{NUMBER:no02}>%{NUMBER:no03} %{DATA:timestamp} %{GREEDYDATA:str01} app %{GREEDYDATA:dyno} - - %{GREEDYDATA:ip} - - \[%{GREEDYDATA:request_time}\] %{GREEDYDATA:request} %{NUMBER:status} %{GREEDYDATA:bytes} "%{GREEDYDATA:http_referer}" "%{GREEDYDATA:user_agent}'
            }
          }

          mutate {
            add_field => {
              "log_type" => "operation-access-heroku"
            }
          }
        }
      }else{
        mutate {
          add_field => {
            "log_type" => "unknown-heroku"
          }
        }
      }

      date {
           match => ["timestamp","YYYY-MM-dd HH:mm:ss"]
           target => "@timestamp"
      }

      mutate {
          remove_field => [
              "real_log"
          ]
      }
    }
  }
}
output {
    if "comiru_app_log_es" in [tags] {
      # stdout{}

      # loki {
      #   url => "http://192.168.1.5:3100/loki/api/v1/push"
      #   batch_wait => 5
      #   batch_size => 204800
      # }

      elasticsearch {
        hosts => "${ELASTIC_ADDR}"
        user => "elastic"
        password => "${ELASTIC_PASSWORD}"
        index => "comiru-%{log_date}"
        ecs_compatibility => disabled
      }
    }
}
