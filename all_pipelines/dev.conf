input {
    file {
        path => "/var/logs/mount/test.log"
    }
}
filter {
    grok{
        match => {
            # for papertrail
            #"message" => '%{NUMBER:no01}\t%{TIMESTAMP_ISO8601:logtime}\t%{TIMESTAMP_ISO8601:logtime_1}\t%{NUMBER:no02}\t%{GREEDYDATA:project}\t%{IP:ip}\t%{GREEDYDATA:localn}%{LOGLEVEL:heroku_log_level}\t%{GREEDYDATA:heroku_log_type}\t%{GREEDYDATA:real_log}\\n'

            # for heroku log drain
            "message" => '%{NUMBER:no01} <%{NUMBER:no02}>%{NUMBER:no03} %{NOTSPACE:logtime} %{NOTSPACE:str01} %{NOTSPACE:str01} %{NOTSPACE:str01} %{NOTSPACE:str01} %{NOTSPACE:str01} %{GREEDYDATA:real_log}'
        }
        add_tag => [ "splited"]
    }

    mutate {
        remove_field => [ "no01", "no02", "logtime_1", "localn" ]
    }

    ruby {
        code => "
            event.set('timestamp', Time.at(Time.parse(event.get('logtime')).to_i+32400).strftime('%Y-%m-%d %H:%M:%S'))
        "
    }

    # handle heroku router log, start with at=info
    grok{
        match => {
            "real_log" => "(?<at>(at=%{LOGLEVEL:at_level}))"
        }
        add_tag => [ "router_log"]
    }
}
output {
    stdout{}
}
